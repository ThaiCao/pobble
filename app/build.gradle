apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.compileSDK
    defaultConfig {
        applicationId "com.base.kotlin"
        minSdkVersion minSDK
        targetSdkVersion targetSDK
        versionCode versionCode
        versionName versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    androidExtensions {
        experimental = true
    }
    dexOptions {
        preDexLibraries = false
    }

    signingConfigs {
        release {
            storeFile file('./keystores/karunwin8.keystore')
            storePassword "Karun@123456"
            keyAlias "thai"
            keyPassword "Karun@123456"
        }

        debug {
            storeFile file('./keystores/karunwin8.keystore')
            storePassword "Karun@123456"
            keyAlias "thai"
            keyPassword "Karun@123456"
        }
    }

    buildTypes {
        debug {
            buildConfigField "String", "APP_HOST_URL", "\"https://newsapi.org/v2/\""
            buildConfigField "String", "APP_API_KEY", "\"a5e3ba5fc023436088fc1750cabe2bc9\""

            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }

        //production
        release {
            buildConfigField "String", "APP_HOST_URL", "\"https://newsapi.org/v2/\""
            buildConfigField "String", "APP_API_KEY", "\"a5e3ba5fc023436088fc1750cabe2bc9\""

            minifyEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
}

kapt {
    generateStubs = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.android.support:appcompat-v7:$supportVersion"
    implementation "com.android.support:design:$supportVersion"
    implementation "com.android.support.constraint:constraint-layout:$constraintLayout"
    implementation 'uk.co.chrisjenx:calligraphy:2.3.0'
    implementation 'com.android.support:multidex:1.0.1'
    //recyclerview
    implementation "com.android.support:recyclerview-v7:$supportVersion"

    //network
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit"

    //leakCanary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakcanary"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanary"
    testImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanary"

    // butterknife
    implementation "com.jakewharton:butterknife:$butterknife"
    kapt "com.jakewharton:butterknife-compiler:$butterknife"

    // gson
    implementation "com.google.code.gson:gson:$gson"

    //ImageLoader
    implementation "com.github.bumptech.glide:glide:$glide"
    implementation "com.github.bumptech.glide:okhttp3-integration:$glide"
    implementation("com.github.bumptech.glide:recyclerview-integration:$glide") {
        // Excludes the support library because it's already included by Glide.
        transitive = false
    }
    annotationProcessor "com.github.bumptech.glide:compiler:$glide"

    // rx java
    implementation "io.reactivex.rxjava2:rxjava:$rxjava"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid"

    // otto
    implementation "com.squareup:otto:$otto"


    testImplementation "junit:junit:$junit"
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
